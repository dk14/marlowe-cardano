{
  "javascript-escrow" :"const explicitRefunds: Boolean = false;\nconst buyer: Party = Role('Buyer');\nconst seller: Party = Role('Seller');\nconst arbiter: Party = Role('Mediator');\n\nconst price: Value = ConstantParam('Price');\n\nconst depositTimeout: Timeout = TimeParam('Payment deadline');\n       const disputeTimeout: Timeout = TimeParam('Complaint response deadline');\n       const answerTimeout: Timeout = TimeParam('Complaint deadline');\n       const arbitrageTimeout: Timeout = TimeParam('Mediation deadline');\n   \n       function choice(choiceName: string, chooser: Party, choiceValue: SomeNumber, continuation: Contract): Case {\n           return Case(Choice(ChoiceId(choiceName, chooser),\n               [Bound(choiceValue, choiceValue)]),\n               continuation);\n       }\n   \n   \n       function deposit(timeout: Timeout, timeoutContinuation: Contract, continuation: Contract): Contract {\n           return When([Case(Deposit(seller, buyer, ada, price), continuation)],\n               timeout,\n               timeoutContinuation);\n       }\n   \n       function choices(timeout: Timeout, chooser: Party, timeoutContinuation: Contract, list: { value: SomeNumber, name: string, continuation: Contract }[]): Contract {\n           var caseList: Case[] = new Array(list.length);\n           list.forEach((element, index) =>\n               caseList[index] = choice(element.name, chooser, element.value, element.continuation)\n           );\n           return When(caseList, timeout, timeoutContinuation);\n       }\n   \n       function sellerToBuyer(continuation: Contract): Contract {\n           return Pay(seller, Account(buyer), ada, price, continuation);\n       }\n   \n       function paySeller(continuation: Contract): Contract {\n           return Pay(buyer, Party(seller), ada, price, continuation);\n       }\n   \n       const refundBuyer: Contract = explicitRefunds ? Pay(buyer, Party(buyer), ada, price, Close) : Close;\n   \n       const refundSeller: Contract = explicitRefunds ? Pay(seller, Party(seller), ada, price, Close) : Close;\n   \n       const contract: Contract =\n           deposit(depositTimeout, Close,\n               choices(disputeTimeout, buyer, refundSeller,\n                   [{ value: 0n, name: 'Everything is alright', continuation: refundSeller },\n                   {\n                       value: 1n, name: 'Report problem',\n                       continuation:\n                           sellerToBuyer(\n                               choices(answerTimeout, seller, refundBuyer,\n                                   [{ value: 1n, name: 'Confirm problem', continuation: refundBuyer },\n                                   {\n                                       value: 0n, name: 'Dispute problem', continuation:\n                                           choices(arbitrageTimeout, arbiter, refundBuyer,\n                                               [{ value: 0n, name: 'Dismiss claim', continuation: paySeller(Close) },\n                                               { value: 1n, name: 'Confirm problem', continuation: refundBuyer }\n                                               ])\n                                   }]))\n                   }]));\n   \n       return contract;"
}